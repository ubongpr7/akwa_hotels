# Generated by Django 5.1.7 on 2025-06-22 16:57

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True,
                        help_text="Country of the address",
                        max_length=255,
                        null=True,
                        verbose_name="Country",
                    ),
                ),
                (
                    "region",
                    models.CharField(
                        blank=True,
                        help_text="Region or state within the country",
                        max_length=255,
                        null=True,
                        verbose_name="Region/State",
                    ),
                ),
                (
                    "subregion",
                    models.CharField(
                        blank=True,
                        help_text="Subregion or province within the region",
                        max_length=255,
                        null=True,
                        verbose_name="Subregion/Province",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True,
                        help_text="City of the address",
                        max_length=255,
                        null=True,
                        verbose_name="City",
                    ),
                ),
                (
                    "apt_number",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Apartment number"
                    ),
                ),
                (
                    "street_number",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Street number"
                    ),
                ),
                ("street", models.CharField(max_length=255, null=True)),
                (
                    "postal_code",
                    models.CharField(
                        blank=True,
                        help_text="Postal code",
                        max_length=10,
                        null=True,
                        verbose_name="Postal code",
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Geographical latitude of the address",
                        max_digits=9,
                        null=True,
                        verbose_name="Latitude",
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Geographical longitude of the address",
                        max_digits=9,
                        null=True,
                        verbose_name="Longitude",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Amenity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("icon", models.CharField(blank=True, max_length=50)),
                ("category", models.CharField(blank=True, max_length=50)),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "verbose_name_plural": "Amenities",
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="Accommodation",
            fields=[
                (
                    "profile_id",
                    models.CharField(
                        help_text="Reference to CompanyProfile ID from users service",
                        max_length=50,
                    ),
                ),
                (
                    "created_by_id",
                    models.CharField(
                        blank=True,
                        help_text="Reference to User ID from users service",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "modified_by_id",
                    models.CharField(
                        blank=True,
                        help_text="Reference to User ID from users service",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("description", models.TextField()),
                ("short_description", models.CharField(blank=True, max_length=500)),
                (
                    "accommodation_type",
                    models.CharField(
                        choices=[
                            ("hotel", "Hotel"),
                            ("vacation_rental", "Vacation Rental"),
                            ("hostel", "Hostel"),
                            ("apartment", "Apartment"),
                            ("villa", "Villa"),
                            ("resort", "Resort"),
                            ("guesthouse", "Guest House"),
                            ("bnb", "Bed & Breakfast"),
                        ],
                        default="hotel",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("suspended", "Suspended"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("website", models.URLField(blank=True)),
                (
                    "average_rating",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("total_reviews", models.PositiveIntegerField(default=0)),
                (
                    "base_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Base price per night",
                        max_digits=10,
                    ),
                ),
                (
                    "currency_id",
                    models.CharField(
                        blank=True,
                        help_text="Reference to Currency ID from currency service",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("check_in_time", models.TimeField(default="14:00")),
                ("check_out_time", models.TimeField(default="11:00")),
                ("cancellation_policy", models.TextField(blank=True)),
                ("house_rules", models.TextField(blank=True)),
                ("total_rooms", models.PositiveIntegerField(default=1)),
                ("max_guests", models.PositiveIntegerField(default=2)),
                ("is_active", models.BooleanField(default=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_verified", models.BooleanField(default=False)),
                ("meta_title", models.CharField(blank=True, max_length=255)),
                ("meta_description", models.CharField(blank=True, max_length=500)),
                (
                    "address",
                    models.ForeignKey(
                        blank=True,
                        help_text="Reference to Address model",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="accommodations",
                        to="accommodation.address",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AccommodationAmenity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_free", models.BooleanField(default=True)),
                (
                    "additional_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "accommodation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="amenities",
                        to="accommodation.accommodation",
                    ),
                ),
                (
                    "amenity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accommodation.amenity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RoomType",
            fields=[
                (
                    "profile_id",
                    models.CharField(
                        help_text="Reference to CompanyProfile ID from users service",
                        max_length=50,
                    ),
                ),
                (
                    "created_by_id",
                    models.CharField(
                        blank=True,
                        help_text="Reference to User ID from users service",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "modified_by_id",
                    models.CharField(
                        blank=True,
                        help_text="Reference to User ID from users service",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("max_occupancy", models.PositiveIntegerField(default=2)),
                ("bed_type", models.CharField(blank=True, max_length=100)),
                (
                    "room_size",
                    models.PositiveIntegerField(
                        blank=True, help_text="Size in square meters", null=True
                    ),
                ),
                ("base_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "weekend_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("total_rooms", models.PositiveIntegerField(default=1)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "accommodation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="room_types",
                        to="accommodation.accommodation",
                    ),
                ),
            ],
            options={
                "ordering": ["accommodation", "name"],
            },
        ),
        migrations.CreateModel(
            name="AccommodationImage",
            fields=[
                (
                    "profile_id",
                    models.CharField(
                        help_text="Reference to CompanyProfile ID from users service",
                        max_length=50,
                    ),
                ),
                (
                    "created_by_id",
                    models.CharField(
                        blank=True,
                        help_text="Reference to User ID from users service",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "modified_by_id",
                    models.CharField(
                        blank=True,
                        help_text="Reference to User ID from users service",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("image", models.ImageField(upload_to="accommodations/%Y/%m/%d/")),
                (
                    "video",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="accommodations/videos/%Y/%m/%d/",
                    ),
                ),
                ("caption", models.CharField(blank=True, max_length=255)),
                ("alt_text", models.CharField(blank=True, max_length=255)),
                ("is_primary", models.BooleanField(default=False)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "accommodation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="accommodation.accommodation",
                    ),
                ),
                (
                    "room_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="accommodation.roomtype",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="AccommodationBooking",
            fields=[
                (
                    "profile_id",
                    models.CharField(
                        help_text="Reference to CompanyProfile ID from users service",
                        max_length=50,
                    ),
                ),
                (
                    "created_by_id",
                    models.CharField(
                        blank=True,
                        help_text="Reference to User ID from users service",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "modified_by_id",
                    models.CharField(
                        blank=True,
                        help_text="Reference to User ID from users service",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("booking_reference", models.CharField(max_length=20, unique=True)),
                (
                    "guest_user_id",
                    models.CharField(
                        blank=True,
                        help_text="Reference to User ID from users service",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("guest_name", models.CharField(max_length=255)),
                ("guest_email", models.EmailField(max_length=254)),
                ("guest_phone", models.CharField(max_length=20)),
                ("check_in_date", models.DateField()),
                ("check_out_date", models.DateField()),
                ("number_of_guests", models.PositiveIntegerField(default=1)),
                ("number_of_rooms", models.PositiveIntegerField(default=1)),
                ("room_rate", models.DecimalField(decimal_places=2, max_digits=10)),
                ("total_nights", models.PositiveIntegerField()),
                ("subtotal", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "taxes",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "fees",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "currency_id",
                    models.CharField(
                        blank=True,
                        help_text="Reference to Currency ID from currency service",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("checked_in", "Checked In"),
                            ("checked_out", "Checked Out"),
                            ("cancelled", "Cancelled"),
                            ("no_show", "No Show"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "payment_id",
                    models.CharField(
                        blank=True,
                        help_text="Reference to payment record in payment service",
                        max_length=100,
                    ),
                ),
                ("payment_status", models.CharField(default="pending", max_length=20)),
                ("special_requests", models.TextField(blank=True)),
                ("internal_notes", models.TextField(blank=True)),
                (
                    "booking_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("confirmation_date", models.DateTimeField(blank=True, null=True)),
                ("check_in_time", models.DateTimeField(blank=True, null=True)),
                ("check_out_time", models.DateTimeField(blank=True, null=True)),
                ("cancellation_date", models.DateTimeField(blank=True, null=True)),
                (
                    "accommodation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bookings",
                        to="accommodation.accommodation",
                    ),
                ),
                (
                    "room_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bookings",
                        to="accommodation.roomtype",
                    ),
                ),
            ],
            options={
                "ordering": ["-booking_date"],
            },
        ),
        migrations.CreateModel(
            name="AccommodationAvailability",
            fields=[
                (
                    "profile_id",
                    models.CharField(
                        help_text="Reference to CompanyProfile ID from users service",
                        max_length=50,
                    ),
                ),
                (
                    "created_by_id",
                    models.CharField(
                        blank=True,
                        help_text="Reference to User ID from users service",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "modified_by_id",
                    models.CharField(
                        blank=True,
                        help_text="Reference to User ID from users service",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date", models.DateField()),
                ("available_rooms", models.PositiveIntegerField(default=0)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("minimum_stay", models.PositiveIntegerField(default=1)),
                ("is_available", models.BooleanField(default=True)),
                ("is_weekend", models.BooleanField(default=False)),
                ("is_holiday", models.BooleanField(default=False)),
                ("special_event", models.CharField(blank=True, max_length=255)),
                (
                    "accommodation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="availability",
                        to="accommodation.accommodation",
                    ),
                ),
                (
                    "room_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="availability",
                        to="accommodation.roomtype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AccommodationReview",
            fields=[
                (
                    "profile_id",
                    models.CharField(
                        help_text="Reference to CompanyProfile ID from users service",
                        max_length=50,
                    ),
                ),
                (
                    "created_by_id",
                    models.CharField(
                        blank=True,
                        help_text="Reference to User ID from users service",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "modified_by_id",
                    models.CharField(
                        blank=True,
                        help_text="Reference to User ID from users service",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "reviewer_user_id",
                    models.CharField(
                        help_text="Reference to User ID from users service",
                        max_length=50,
                    ),
                ),
                ("reviewer_name", models.CharField(max_length=255)),
                (
                    "rating",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255)),
                ("comment", models.TextField()),
                (
                    "cleanliness_rating",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "location_rating",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "service_rating",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "value_rating",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                ("is_published", models.BooleanField(default=True)),
                ("response", models.TextField(blank=True)),
                ("response_date", models.DateTimeField(blank=True, null=True)),
                (
                    "accommodation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="accommodation.accommodation",
                    ),
                ),
                (
                    "booking",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="review",
                        to="accommodation.accommodationbooking",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["accommodation", "is_published"],
                        name="accommodati_accommo_dcb3d5_idx",
                    ),
                    models.Index(
                        fields=["reviewer_user_id"],
                        name="accommodati_reviewe_f2eaeb_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="accommodation",
            index=models.Index(
                fields=["profile_id", "status"], name="accommodati_profile_a8b1c8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="accommodation",
            index=models.Index(
                fields=["accommodation_type"], name="accommodati_accommo_661767_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="accommodation",
            index=models.Index(
                fields=["is_active", "is_featured"],
                name="accommodati_is_acti_9f3c84_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="accommodationamenity",
            unique_together={("accommodation", "amenity")},
        ),
        migrations.AlterUniqueTogether(
            name="roomtype",
            unique_together={("accommodation", "name")},
        ),
        migrations.AddIndex(
            model_name="accommodationbooking",
            index=models.Index(
                fields=["profile_id", "status"], name="accommodati_profile_419c7d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="accommodationbooking",
            index=models.Index(
                fields=["guest_user_id"], name="accommodati_guest_u_e8579f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="accommodationbooking",
            index=models.Index(
                fields=["check_in_date", "check_out_date"],
                name="accommodati_check_i_8d0ade_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="accommodationbooking",
            index=models.Index(
                fields=["booking_reference"], name="accommodati_booking_ed37c2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="accommodationavailability",
            index=models.Index(
                fields=["accommodation", "date"], name="accommodati_accommo_697473_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="accommodationavailability",
            index=models.Index(
                fields=["date", "is_available"], name="accommodati_date_a94ee3_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="accommodationavailability",
            unique_together={("accommodation", "room_type", "date")},
        ),
    ]
